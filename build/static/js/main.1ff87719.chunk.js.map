{"version":3,"sources":["components/Search/index.js","components/Employees/index.js","App.js","reportWebVitals.js","index.js"],"names":["Search","onChange","class","Row","Col","xs","Form","Group","controlId","Control","type","placeholder","Employees","useState","employees","setEmployees","setTable","searchState","setSearch","useEffect","axios","get","then","res","data","results","filteredEmployees","filter","employee","name","first","indexOf","last","email","phone","dob","date","sortTable","event","id","target","sort","a","b","console","log","className","value","Table","striped","hover","variant","onClick","map","index","generateUniqueId","length","useLetters","src","picture","medium","alt","href","format","App","Container","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kWAqBeA,MAlBf,YAA+B,IAAbC,EAAY,EAAZA,SACd,OACI,qBAAKC,MAAM,aAAX,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,SACI,cAACF,EAAA,EAAKG,QAAN,CAAcR,SAAYA,EAAWS,KAAK,SAASC,YAAY,kCAI3E,cAACP,EAAA,EAAD,U,iBCoJDQ,G,MA1JG,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACZC,EADY,KACDC,EADC,OAEaF,mBAAS,IAFtB,mBAEAG,GAFA,aAGeH,mBAAS,IAHxB,mBAGZI,EAHY,KAGCC,EAHD,KAMpBC,qBAAU,WACNC,IACKC,IAAI,iDACJC,MAAK,SAACC,GACHR,EAAaQ,EAAIC,KAAKC,cAG/B,IAGH,IAAIC,EAAoBZ,EAAUa,QAAO,SAACC,GACtC,OACgD,IAA9CA,EAASC,KAAKC,MAAMC,QAAQd,KACiB,IAA7CW,EAASC,KAAKG,KAAKD,QAAQd,KACc,IAAzCW,EAASK,MAAMF,QAAQd,KACkB,IAAzCW,EAASM,MAAMH,QAAQd,KACqB,IAA5CW,EAASO,IAAIC,KAAKL,QAAQd,MAShC,SAASoB,EAAUC,GACf,IAAMC,EAAKD,EAAME,OAAOD,GAExB,OAAOA,GACH,IAAK,OACDzB,EAAU2B,MAAK,SAACC,EAAGC,GACf,OAAID,EAAEb,KAAKG,KAAOW,EAAEd,KAAKG,MACb,EAEHW,EAAEd,KAAKG,KAAOU,EAAEb,KAAKG,KACnB,EAGA,KAIfhB,EAAQ,WAAR,cAAYF,IACZ,MACJ,IAAK,QACDA,EAAU2B,MAAK,SAACC,EAAGC,GACf,OAAID,EAAER,MAAQS,EAAET,OACJ,EAEHS,EAAET,MAAQQ,EAAER,MACV,EAGA,KAIflB,EAAQ,WAAR,cAAYF,IACZ,MACJ,IAAK,QACDA,EAAU2B,MAAK,SAACC,EAAGC,GACf,OAAID,EAAET,MAAQU,EAAEV,OACJ,EAEHU,EAAEV,MAAQS,EAAET,MACV,EAGA,KAIfjB,EAAQ,WAAR,cAAYF,IACZ,MACJ,IAAK,MACDA,EAAU2B,MAAK,SAACC,EAAGC,GACf,OAAID,EAAEP,IAAIC,KAAOO,EAAER,IAAIC,MACX,EAEHO,EAAER,IAAIC,KAAOM,EAAEP,IAAIC,KACjB,EAGA,KAIfpB,EAAQ,WAAR,cAAYF,IACZ,MACJ,QACI8B,QAAQC,IAAR,UAAeN,KAM3B,OACI,sBAAKO,UAAU,UAAf,UAEI,cAAC,EAAD,CAAQ7C,SA/EhB,SAAkBqC,GACdpB,EAAUoB,EAAME,OAAOO,UA+EnB,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,QAAQ,OAA7B,UAEI,gCACA,+BACI,uBACA,oBAAIZ,GAAG,OAAOa,QAAUf,EAAxB,kBACA,oBAAIE,GAAG,QAAQa,QAAUf,EAAzB,mBACA,oBAAIE,GAAG,QAAQa,QAAUf,EAAzB,mBACA,oBAAIE,GAAG,MAAMa,QAAUf,EAAvB,sBAKJ,gCACEX,EAAkB2B,KAAI,SAACzB,EAAU0B,GAC/B,IAAMf,EAAKgB,IAAiB,CACxBC,OAAQ,EACRC,YAAY,IAGhB,OACA,qBAAkBlB,GAAKA,EAAvB,UACI,oBAAIA,GAAG,QAAP,SACI,qBACImB,IAAK9B,EAAS+B,QAAQC,OACtBC,IAAG,mBAAcjC,EAASC,KAAKC,MAA5B,YAAqCF,EAASC,KAAKG,UAG9D,qBAAIO,GAAG,OAAP,UACKX,EAASC,KAAKC,MADnB,IAC2BF,EAASC,KAAKG,QAEzC,oBAAIO,GAAG,QAAP,SAAgBX,EAASM,QACzB,oBAAIK,GAAG,QAAP,SACI,mBAAGuB,KAAI,iBAAYlC,EAASK,OAA5B,SAAsCL,EAASK,UAEnD,oBAAIM,GAAG,MAAP,SACI,cAAC,IAAD,CAAQwB,OAAO,eAAf,SAA+BnC,EAASO,IAAIC,WAf1CkB,gB,QC1GfU,G,6KAtBX,OACE,qBAAKlB,UAAU,MAAf,SACE,eAACmB,EAAA,EAAD,WAGE,mCACE,oDACA,+GAMF,cAAC,EAAD,a,GAhBQC,cCOHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ff87719.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\n\nfunction Search({ onChange }) {\n    return(\n        <div class=\"search-box\">\n            <Row>\n                <Col/>\n                <Col xs={6}>\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control onChange= { onChange } type=\"search\" placeholder=\"Search by Employee Name\" />\n                        </Form.Group>\n                    </Form>\n                </Col>\n                <Col/>\n            </Row>\n        </div>\n    )\n};\n\nexport default Search;","import generateUniqueId from 'generate-unique-id';\nimport { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport Search from \"../Search\";\nimport axios from \"axios\";\nimport \"./style.css\";\n\n\nconst Employees = () => {\n    const [ employees, setEmployees ] = useState([]);\n    const [ tableState, setTable ] = useState([]);\n    const [ searchState, setSearch ] = useState([]);\n\n    // CALL EMPLOYEE API\n    useEffect(() => {\n        axios\n            .get('https://randomuser.me/api/?results=142&nat=us')\n            .then((res) => {\n                setEmployees(res.data.results);\n            });\n\n    }, []);\n\n    // FILTER EMPLOYEES VIA SEARCH\n    let filteredEmployees = employees.filter((employee) => {\n        return (\n          employee.name.first.indexOf(searchState) !== -1 ||\n          employee.name.last.indexOf(searchState) !== -1 ||\n          employee.email.indexOf(searchState) !== -1 ||\n          employee.phone.indexOf(searchState) !== -1 ||\n          employee.dob.date.indexOf(searchState) !== -1\n        );\n    });\n\n    function onChange(event) {\n        setSearch(event.target.value);\n    };\n\n    // SORT TABLE\n    function sortTable(event) {\n        const id = event.target.id;\n        \n        switch(id) {\n            case \"name\": \n                employees.sort((a, b) => {\n                    if (a.name.last < b.name.last) {\n                        return -1;\n                    }\n                    else if (b.name.last > a.name.last) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n        \n                setTable(...employees);\n                break;\n            case \"phone\": \n                employees.sort((a, b) => {\n                    if (a.phone < b.phone) {\n                        return -1;\n                    }\n                    else if (b.phone > a.phone) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n        \n                setTable(...employees);\n                break;\n            case \"email\": \n                employees.sort((a, b) => {\n                    if (a.email < b.email) {\n                        return -1;\n                    }\n                    else if (b.email > a.email) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n        \n                setTable(...employees);\n                break;    \n            case \"dob\": \n                employees.sort((a, b) => {\n                    if (a.dob.date < b.dob.date) {\n                        return -1;\n                    }\n                    else if (b.dob.date > a.dob.date) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n        \n                setTable(...employees);\n                break; \n            default:\n                console.log(`${id}`);\n                break;\n\n        }\n    }\n\n    return (\n        <div className=\"results\">\n\n            <Search onChange= { onChange }/>\n            <Table striped hover variant=\"dark\">\n                {/* TABLE HEADING */}\n                <thead>\n                <tr>    \n                    <th></th>\n                    <th id=\"name\" onClick={ sortTable }>Name</th>\n                    <th id=\"phone\" onClick={ sortTable }>Phone</th>\n                    <th id=\"email\" onClick={ sortTable }>Email</th>\n                    <th id=\"dob\" onClick={ sortTable }>DOB</th>\n                </tr>\n                </thead>\n\n                {/* TABLE BODY */}\n                <tbody>\n                { filteredEmployees.map((employee, index) => {\n                    const id = generateUniqueId({\n                        length: 5,\n                        useLetters: false\n                    });\n\n                    return (\n                    <tr key={ index } id={ id }>\n                        <td id=\"image\">\n                            <img\n                                src={employee.picture.medium}\n                                alt={`Employee ${employee.name.first} ${employee.name.last}`}\n                            ></img>\n                        </td>\n                        <td id=\"name\">\n                            {employee.name.first} {employee.name.last}\n                        </td>\n                        <td id=\"phone\">{employee.phone}</td>\n                        <td id=\"email\">\n                            <a href={`mailto:${employee.email}`}>{employee.email}</a>\n                        </td>\n                        <td id=\"dob\">\n                            <Moment format=\"MMM DD, YYYY\">{employee.dob.date}</Moment>\n                        </td>\n                    </tr>\n                    );\n                }) }\n                </tbody>\n                \n            </Table>\n        </div>\n    )\n};\n\nexport default Employees;","import React, { Component } from \"react\";\nimport Employees from \"./components/Employees\";\nimport { Container } from \"react-bootstrap\";\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n\n          {/* APP HEADING */}\n          <header>\n            <h1>Employee Directory</h1>\n            <h2>\n              Click on a column title  or utilize the search bar \n              to query employee data.\n            </h2>\n          </header>\n          \n          <Employees />\n\n        </Container>\n      </div>\n    );\n  }\n  \n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}